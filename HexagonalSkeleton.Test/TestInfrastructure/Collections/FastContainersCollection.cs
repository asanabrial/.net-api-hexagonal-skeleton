using HexagonalSkeleton.Test.TestInfrastructure.Shared;
using Xunit;
using System;
using System.Threading.Tasks;

namespace HexagonalSkeleton.Test.TestInfrastructure.Collections
{
    /// <summary>
    /// Colecci√≥n para tests R√ÅPIDOS que solo usan PostgreSQL + MongoDB + Kafka
    /// Ideal para desarrollo diario (60-90 segundos vs 3-4 minutos)
    /// </summary>
    [CollectionDefinition("FastContainers")]
    public class FastContainersCollection : ICollectionFixture<FastContainersFixture>
    {
        // Esta clase est√° vac√≠a y solo sirve como marcador para xUnit
    }

    /// <summary>
    /// Fixture r√°pido que gestiona solo los 3 contenedores esenciales
    /// </summary>
    public class FastContainersFixture : IAsyncLifetime
    {
        public async Task InitializeAsync()
        {
            try
            {
                Console.WriteLine("‚ö° Inicializando fixture R√ÅPIDO...");
                
                // Solo inicializar los contenedores esenciales
                await FastTestContainerManager.Instance.InitializeAsync();
                
                Console.WriteLine("‚úÖ Fixture r√°pido inicializado");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"‚ùå Error inicializando fixture r√°pido: {ex.Message}");
                throw;
            }
        }

        public async Task DisposeAsync()
        {
            try
            {
                Console.WriteLine("üõë Limpiando fixture r√°pido...");
                
                await FastTestContainerManager.Instance.DisposeAsync();
                
                Console.WriteLine("‚úÖ Fixture r√°pido limpiado");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"‚ö†Ô∏è Error limpiando fixture r√°pido: {ex.Message}");
            }
        }
    }
}
